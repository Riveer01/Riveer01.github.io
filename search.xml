<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>搭建博客hexo-next</title>
    <url>/2022/07/17/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2hexo-next/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>基于hexo6.2.0，next7.8.0，github，前提是已经安装好git，node.js，注册了github账号。搭建的过程是一个熟能生巧的过程，可能会多次删除重新来过。<span id="more"></span></p>
<p>文章中提到的<code>站点配置文件</code>是Blog\_congfig.yml，<code>主题配置文件</code>是Blog\themes\next\_config.yml。</p>
<p>这是我搭建自己的博客之后发表的第一篇文章，用于记录自己搭建博客的经验。搭建博客的主要原因是记录、分享自己的学习过程、生活感想。</p>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<a href="https://hexo.io/zh-cn/">Hexo</a></h1><p>Hexo是我们个人博客网站的框架，首先创建一个文件夹来存放你的博客的所有内容，比如命名为<code>Blog</code>。</p>
<p>在<code>Blog</code>文件夹中右击</p>
<img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/1.png" alt="1" style="zoom: 50%;" />

<p>在命令行中输入如下命令来安装Hexo(注意在git bash中粘贴的快捷键为shift+insert，可以自行百度linux下的相关命令)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>然后初始化博客，输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>然后静态部署</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p>部署完成，输入命令查看效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>浏览器输入 <a href="https://link.zhihu.com/?target=http://baixin.io/2015/08/HEXO%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E6%9C%80%E5%8E%9F%E5%A7%8B%E7%9A%84%E6%95%88%E6%9E%9C%E4%BA%86">http://localhost:4000</a> 就可以打开新部署的网页，看完之后按ctrl+c停止服务器。</p>
<h1 id="将Hexo部署到github"><a href="#将Hexo部署到github" class="headerlink" title="将Hexo部署到github"></a>将Hexo部署到github</h1><p>只有将Hexo部署到github，别人才能在互联网上看见你的博客，首先在github新建一个Repositorie，这个Repositorie的命名是有讲究的，如图</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/2.png" alt="2"></p>
<p>然后修改站点配置文件，打开站点配置文件，找到关键字<code>deploy</code>，修改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/Riveer01/Riveer01.github.io.git  #你的仓库地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>注意repository应该填你的仓库地址，在github中可以找到，如图</p>
<img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/3.png" alt="3" style="zoom:50%;" />

<p>然后在git bash中输入命令（如果已经关闭，需要重新在<code>Blog</code>文件夹中右击打开，后面都是如此）,安装Git部署插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>然后分别输入下面三条命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure>

<p>完成以后，打开浏览器，输入 <a href="https://link.zhihu.com/?target=https://fengye97.github.io/">https://xxx.github.io</a> 就可以打开你的网页了，xxx是你的github名字。可能需要等待几分钟，每次部署到github都会有延迟。</p>
<h1 id="将主题更换成next"><a href="#将主题更换成next" class="headerlink" title="将主题更换成next"></a>将主题更换成next</h1><p>打开博客根目录Blog文件夹，右键Git Bash，输入如下代码将next主题下载到目录Blog&#x2F;themes：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>因为网络延迟不成功的话，可以多试几次。打开站点配置文件，修改一些配置：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/4.png" alt="4"></p>
<p>然后将主题更换为next（可以用文本编辑器的搜索功能通过关键字定位）：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/5.png" alt="5"></p>
<p>next的主题有四种，你可以选择其中一种，通过主题配置文件修改：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/6.png" alt="6"></p>
<p>可以通过<code>hexo g</code>、<code>hexo s</code>进行测试，产看效果，如果成功了，则通过<code>hexo clean</code>、<code>hexo g</code>、<code>hexo d</code>部署到github。如果测试成功而部署不成功，则可以删除next下的.git文件夹，然后重新使用三条命令进行部署。</p>
<h1 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h1><p>打开主题配置文件，找到<code>menu</code>进行修改：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/7.png" alt="7"></p>
<p>这些菜单都是它自带的，如果想自定义，可以仿照上面的格式添加内容，不过想把英文转换成中文，还需要修改theme&#x2F;next&#x2F;languages&#x2F;zh-CN.yml的配置，建立一一对应关系：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/8.png" alt="8"></p>
<p>上面添加的菜单还应该添加对应的页面,执行如下命令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;resources&quot;</span><br></pre></td></tr></table></figure>

<p>此时在根目录的sources文件夹下会生成categories、tags、about、resources四个文件，每个文件中有一个<code>index.md</code>文件，修改内容分别如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2020-02-10 22:07:08</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2020-02-10 22:07:08</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 关于</span><br><span class="line">date: 2020-02-10 22:07:08</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 资源</span><br><span class="line">date: 2020-02-10 22:07:08</span><br><span class="line">type: &quot;resources&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<h1 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h1><p>打开主题配置文件即themes&#x2F;next下的_config.yml，查找avatar，url后是图片的链接地址：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/9.png" alt="9"></p>
<p>然后将你要的头像图片复制到themes&#x2F;next&#x2F;source&#x2F;images里，重命名为avatar.jif。</p>
<h1 id="主页文章添加阴影"><a href="#主页文章添加阴影" class="headerlink" title="主页文章添加阴影"></a>主页文章添加阴影</h1><p>打开themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;conponents&#x2F;post&#x2F;post.styl，修改.post-block，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.use-motion &#123;</span><br><span class="line">  if (hexo-config(&#x27;motion.transition.post_block&#x27;)) &#123;</span><br><span class="line">    .post-block &#123;</span><br><span class="line">      opacity: 0;</span><br><span class="line">      margin-top: 60px;</span><br><span class="line">      margin-bottom: 60px;</span><br><span class="line">      padding: 25px;</span><br><span class="line">      background:rgba(255,255,255,0.9) none repeat scroll !important;</span><br><span class="line">      -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, 1);</span><br><span class="line">      -moz-box-shadow: 0 0 5px rgba(202, 203, 204, 1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    .pagination, .comments&#123;</span><br><span class="line">      opacity: 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h1 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h1><p>在themes&#x2F;next目录下打开Git Bash，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure>

<p>打开主题配置文件即themes&#x2F;next下的_config.yml，找到pace，将enable：false改为true，你还可以选择类型（theme）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pace:</span><br><span class="line">  enable: true</span><br><span class="line">  # Themes list:</span><br><span class="line">  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class="line">  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure>

<h1 id="设置预览摘要"><a href="#设置预览摘要" class="headerlink" title="设置预览摘要"></a>设置预览摘要</h1><p>只要我们在文章中插入 <!-- more -->，该标签之上的是摘要，之后的内容不可见，需点击全文阅读按钮。</p>
<h1 id="添加社交链接"><a href="#添加社交链接" class="headerlink" title="添加社交链接"></a>添加社交链接</h1><p>打开<strong>主题配置文件</strong>即themes&#x2F;next下的_config.yml，搜索social，添加你想要的社交链接：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/10.png" alt="10"></p>
<h1 id="设置博文内链接为蓝色"><a href="#设置博文内链接为蓝色" class="headerlink" title="设置博文内链接为蓝色"></a>设置博文内链接为蓝色</h1><p>打开themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F;post.styl文件，将下面的代码复制到文件最后：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.post-body p a&#123;</span><br><span class="line">     color: #0593d3;</span><br><span class="line">     border-bottom: none;</span><br><span class="line">     &amp;:hover &#123;</span><br><span class="line">       color: #0477ab;</span><br><span class="line">       text-decoration: underline;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h1 id="访客和阅读统计"><a href="#访客和阅读统计" class="headerlink" title="访客和阅读统计"></a>访客和阅读统计</h1><p>打开next主题配置文件\themes\next_config.yml，搜索找到<strong>busuanzi_count</strong>，把enable设置为true:</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/11.png" alt="11"></p>
<p>同样是在next主题配置文件\themes\next_config.yml下，搜索<strong>footer</strong>，在它底下添加counter，设值为true:</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/12.png" alt="12"></p>
<p>来到themes\next\layout_partials，找到<strong>footer.swig</strong>文件，打开编辑，在底下添加代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.footer.counter %&#125;</span><br><span class="line">    &lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="文章末尾”本文结束”标记"><a href="#文章末尾”本文结束”标记" class="headerlink" title="文章末尾”本文结束”标记"></a>文章末尾”本文结束”标记</h1><p>在路径&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:24px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>接着打开&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_macro&#x2F;post.swig文件，在post-footer前添加代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if not is_index and theme.passage_end_tag.enabled %&#125;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">     &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>具体位置如图：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/13.png" alt="13"></p>
<p>然后打开<strong>主题配置文件</strong>（_config.yml)，在末尾添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure>

<h1 id="文章末尾添加版权说明"><a href="#文章末尾添加版权说明" class="headerlink" title="文章末尾添加版权说明"></a>文章末尾添加版权说明</h1><p>查找<strong>主题配置文件</strong>themes&#x2F;next&#x2F;_config.yml中的creative_commons：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: false</span><br><span class="line">  post: true  # 将false改为true即可显示版权信息</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>

<h1 id="头部设置阅读进度条"><a href="#头部设置阅读进度条" class="headerlink" title="头部设置阅读进度条"></a>头部设置阅读进度条</h1><p>查找<strong>主题配置文件</strong>themes&#x2F;next&#x2F;_config.yml中的reading_progress：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/14.png" alt="14"></p>
<h1 id="站内搜索功能"><a href="#站内搜索功能" class="headerlink" title="站内搜索功能"></a>站内搜索功能</h1><p>安装插件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search  --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>在站点配置文件末尾添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>修改主题配置文件，启用local_search。</p>
<h1 id="修改底部标签图标"><a href="#修改底部标签图标" class="headerlink" title="修改底部标签图标"></a>修改底部标签图标</h1><p>打开&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_macro&#x2F;post.swig文件，查找<code>tag</code>，进行如下修改：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/15.png" alt="15"></p>
<h1 id="代码一键复制功能"><a href="#代码一键复制功能" class="headerlink" title="代码一键复制功能"></a>代码一键复制功能</h1><p>在主题配置文件中找到copy_button，进行如下修改：</p>
<p><img src="https://riveer.oss-cn-hangzhou.aliyuncs.com/image/16.png" alt="16"></p>
<h1 id="添加打赏"><a href="#添加打赏" class="headerlink" title="添加打赏"></a>添加打赏</h1><p>制作微信和支付宝收款码，将制作好的二维码图片放入themes&#x2F;next&#x2F;source&#x2F;images文件里，并命名为wechatpay.png和alipay.png。</p>
<p>打开主题配置文件，找到<code>reward</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reward_settings:</span><br><span class="line">  enable: true   #改为true</span><br><span class="line">  animation: false</span><br><span class="line">  comment: 原创技术分享，您的支持将鼓励我继续创作</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: /images/wechatpay.png   #将前面的#去掉</span><br><span class="line">  alipay: /images/alipay.png         #将前面的#去掉</span><br><span class="line">  #paypal: /images/paypal.png</span><br><span class="line">  #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure>

<h1 id="图片上传博客问题"><a href="#图片上传博客问题" class="headerlink" title="图片上传博客问题"></a>图片上传博客问题</h1><p>有众多解决方案，我采用的是：OSS对象存储+PicGo搭建图床，具体参考：</p>
<p><a href="https://blog.csdn.net/qq_30105599/article/details/119651114">(26条消息) 关于Hexo写博客时的图片插入问题（OSS对象存储+PicGo搭建图床）___tourist的博客-CSDN博客</a></p>
<p><a href="https://blog.51cto.com/u_15127537/4547306">阿里云OSS+Picgo搭建图床_mob604756ebc436的技术博客_51CTO博客</a></p>
<h1 id="持续更新"><a href="#持续更新" class="headerlink" title="持续更新"></a>持续更新</h1>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML学习笔记</title>
    <url>/2022/07/21/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><p>记录HTML的学习历程。<span id="more"></span></p>
<h2 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h2><p>在网页中，有时需要为文字设置<code>粗体</code>、<code>斜体</code>或<code>下划线</code>等效果，这时需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p>
<p>标签语义：突出重要性，比普通文字更重要。</p>
<table>
<thead>
<tr>
<th align="left"><strong>语义</strong></th>
<th align="left"><strong>标签</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">加粗</td>
<td align="left">&lt;strong&gt;&lt;&#x2F;strong&gt;或者&lt;b&gt;&lt;&#x2F;b&gt;</td>
<td>更推荐使用&lt;strong&gt;&lt;&#x2F;strong&gt;标签加粗，语义更强烈</td>
</tr>
<tr>
<td align="left">倾斜</td>
<td align="left">&lt;em&gt;&lt;&#x2F;em&gt;或者&lt;i&gt;&lt;&#x2F;i&gt;</td>
<td>更推荐使用&lt;em&gt;&lt;&#x2F;em&gt;标签加粗，语义更强烈</td>
</tr>
<tr>
<td align="left">删除线</td>
<td align="left">&lt;del&gt;&lt;&#x2F;del&gt;或者&lt;s&gt;&lt;&#x2F;s&gt;</td>
<td>更推荐使用&lt;del&gt;&lt;&#x2F;del&gt;标签加粗，语义更加强烈</td>
</tr>
<tr>
<td align="left">下划线</td>
<td align="left">&lt;ins&gt;&lt;&#x2F;ins&gt;或者&lt;u&gt;&lt;&#x2F;u&gt;</td>
<td>更推荐使用&lt;ins&gt;&lt;&#x2F;ins&gt;标签加粗，语义更强烈</td>
</tr>
</tbody></table>
<h2 id="盒子标签"><a href="#盒子标签" class="headerlink" title="盒子标签"></a>盒子标签</h2><p>&lt;div&gt;和&lt;span&gt;是没有语义的，它们就是一个盒子，用来装内容的。div是division的缩写，表示分隔、分区；span意为跨度、跨距。</p>
<ul>
<li>&lt;div&gt;标签用来布局，但是一行只能放一个，大盒子；</li>
<li>&lt;span&gt;标签用来布局，一行可以放多个&lt;span&gt;，小盒子。</li>
</ul>
<h2 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h2><p>&lt;img&gt;是一个单标签。</p>
<p>用法：&lt;img src &#x3D; “图像URL” &gt;</p>
<p>src是&lt;img&gt;标签的<code>必须属性</code>，它用于指定图像的路径和文件名。</p>
<p>图像标签的属性：</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th><strong>属性值</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>src</td>
<td>图片路径</td>
<td>必须属性</td>
</tr>
<tr>
<td>alt</td>
<td>文本</td>
<td>替换文本。图像不能显示的文字</td>
</tr>
<tr>
<td>title</td>
<td>文本</td>
<td>提示文本。鼠标放到图像上显示的文字</td>
</tr>
<tr>
<td>width</td>
<td>像素</td>
<td>设置图像的宽度</td>
</tr>
<tr>
<td>height</td>
<td>像素</td>
<td>设置图像的高度</td>
</tr>
<tr>
<td>border</td>
<td>像素</td>
<td>设置图像的边框粗细，一般通过css来设定</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>一般只需要设定width和height之一；</li>
<li>图像标签可以拥有多个属性，必须写在标签名的后面；</li>
<li>属性之间部分先后顺序，标签名与属性、属性与属性之间均以空格分开；</li>
<li>属性采取键值对的格式，即key &#x3D; “value”的格式，属性 &#x3D; “属性值”。</li>
</ul>
<h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><h3 id="目录文件夹和根目录"><a href="#目录文件夹和根目录" class="headerlink" title="目录文件夹和根目录"></a>目录文件夹和根目录</h3><ul>
<li>目录文件夹：就是普通文件夹，里面只不过放了我们做页面所需要的素材，比如html文件和图片等。</li>
<li>根目录：打开目录文件夹的第一层就是根目录。</li>
</ul>
<h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p>相对路径：以引用文件所在的位置为参考基础，而建立出的目录路径。</p>
<table>
<thead>
<tr>
<th><strong>相对路径分类</strong></th>
<th><strong>符号</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>同一级路径</td>
<td></td>
<td>图像文件位于HTML文件的同一级，如&lt;img src&#x3D;”baidu.gif”&#x2F;&gt;</td>
</tr>
<tr>
<td>下一级路径</td>
<td>&#x2F;</td>
<td>图像文件位于HTML文件的下一级，如&lt;img src&#x3D;”images&#x2F;baidu.gif”&#x2F;&gt;</td>
</tr>
<tr>
<td>上一级路径</td>
<td>..&#x2F;</td>
<td>图像文件位于HTML文件的上一级，如&lt;img src&#x3D;”..&#x2F;images&#x2F;baidu.gif”&#x2F;&gt;</td>
</tr>
</tbody></table>
<h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><p>绝对路径：是指目录下的绝对位置，直接到达目标位置，通常是从盘符开始的路径。</p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>语法格式：&lt;a href&#x3D;”跳转目标” target&#x3D;”目标窗口的弹出方式”&gt; 文本或图像 &lt;&#x2F;a&gt;</p>
<p>单词anchor的缩写，意为：锚。</p>
<p>两个属性的作用如下：</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>href</td>
<td>用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能</td>
</tr>
<tr>
<td>target</td>
<td>用于指定链接页面的打开方式，其中_self为默认值，_blank为在新窗口中打开方式</td>
</tr>
</tbody></table>
<h3 id="链接分类"><a href="#链接分类" class="headerlink" title="链接分类"></a>链接分类</h3><ul>
<li>外部链接：例如&lt;a href&#x3D;”<a href="http://www.baidu.com&quot;&gt;百度/">http://www.baidu.com&quot;&gt;百度\</a></a>。必须添加http:&#x2F;&#x2F;</li>
<li>内部链接：网站内部页面之间的相互链接，直接链接内部名称即可，例如：&lt;a href&#x3D;”index.html”&gt;首页&lt;&#x2F;a&gt;。</li>
<li>空连接：用于指向还没有完成的页面，例如：&lt;a href&#x3D;”#”&gt;首页&lt;&#x2F;a&gt;。</li>
<li>下载链接：如果href里面地址是一个文件或者压缩包，会下载这个文件。</li>
<li>网页元素链接：在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接，例如：&lt;a href&#x3D;”<a href="http://www.baidu.com&quot;&gt;/">http://www.baidu.com&quot;&gt;\</a><img src="image.jpg"/>&lt;&#x2F;a&gt;。</li>
<li>锚点链接：当我们点击链接，可以快速定位到页面中的某个位置。 <ul>
<li>在链接文本的href属性中，设置属性值为“#名字”的形式，例如&lt;a href&#x3D;”#two”&gt;第二集&lt;&#x2F;a&gt;；</li>
<li>找到目标位置标签，里面添加一个id 属性&#x3D;刚才的名字，例如：&lt;h3 id&#x3D;”two”&gt;第二集介绍&lt;&#x2F;h3&gt;。</li>
</ul>
</li>
</ul>
<h2 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h2><p>&lt;!– 注释内容 –&gt;，vscode快捷键：<code>ctril</code>+<code>\</code>。</p>
<h2 id="特使字符"><a href="#特使字符" class="headerlink" title="特使字符"></a>特使字符</h2><table>
<thead>
<tr>
<th><strong>特使字符</strong></th>
<th><strong>描述</strong></th>
<th><strong>字符的代码</strong></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>空格符</td>
<td>&amp;nbsp;</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于号</td>
<td>&amp;lt;</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于号</td>
<td>&amp;gt;</td>
</tr>
<tr>
<td>&amp;</td>
<td>和号</td>
<td>&amp;amp;</td>
</tr>
<tr>
<td>￥</td>
<td>人名币</td>
<td>&amp;yen;</td>
</tr>
<tr>
<td>&amp;copy;</td>
<td>版权</td>
<td>&amp;copy;</td>
</tr>
<tr>
<td>&amp;reg;</td>
<td>注册上标</td>
<td>&amp;reg;</td>
</tr>
<tr>
<td>&amp;deg;</td>
<td>摄氏度</td>
<td>&amp;deg;</td>
</tr>
<tr>
<td>&amp;plusmn;</td>
<td>正负号</td>
<td>&amp;plusmn;</td>
</tr>
<tr>
<td>&amp;times;</td>
<td>乘号</td>
<td>&amp;times;</td>
</tr>
<tr>
<td>&amp;divide;</td>
<td>除号</td>
<td>&amp;devide;</td>
</tr>
<tr>
<td>&amp;sup2;</td>
<td>平方2（上标2）</td>
<td>&amp;sup2;</td>
</tr>
<tr>
<td>&amp;sup3;</td>
<td>立方3（上标3）</td>
<td>&amp;sup3;</td>
</tr>
</tbody></table>
<h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><h3 id="表格的主要作用"><a href="#表格的主要作用" class="headerlink" title="表格的主要作用"></a>表格的主要作用</h3><p>表格主要用于显示数据，因为它可以让数据显示得非常规整，可读性非常好，特别是后台展示数据的时候，能够熟练运用表格显得很重要。表格不是用来布局页面的，而是用来展示数据的。</p>
<h3 id="表格的基本语法"><a href="#表格的基本语法" class="headerlink" title="表格的基本语法"></a>表格的基本语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">	&lt;tr&gt;</span><br><span class="line">		&lt;td&gt;单元格内的文字&lt;/td&gt;</span><br><span class="line">		...</span><br><span class="line">	&lt;/tr&gt;</span><br><span class="line">	...</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>&lt;table&gt;&lt;&#x2F;table&gt;是用于定义表格的标签。</li>
<li>&lt;tr&gt;&lt;&#x2F;tr&gt;用于定义表格中的行，必须嵌套在&lt;table&gt;&lt;&#x2F;table&gt;中。</li>
<li>&lt;td&gt;&lt;&#x2F;td&gt;用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;&#x2F;tr&gt;中。</li>
<li>字母td是指表格数据（table data），即数据单元格的内容。</li>
</ul>
<h3 id="表头单元格标签"><a href="#表头单元格标签" class="headerlink" title="表头单元格标签"></a>表头单元格标签</h3><p>一般表头单元格位于表格的第一行或第一列，表头单元格里面的文本内容加粗居中显示。&lt;th&gt;标签表示HTML表格的表头部分（table head的缩写）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">	&lt;tr&gt;</span><br><span class="line">		&lt;th&gt;表头部分&lt;/th&gt;</span><br><span class="line">		...</span><br><span class="line">	&lt;/tr&gt;</span><br><span class="line">	...</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>

<h3 id="表格的属性"><a href="#表格的属性" class="headerlink" title="表格的属性"></a>表格的属性</h3><p>表格标签这部分属性我们实际很少用，后面通过css来设置。</p>
<table>
<thead>
<tr>
<th><strong>属性名</strong></th>
<th><strong>属性值</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>align</td>
<td>left、right、center</td>
<td>规定表格相对周围元素的对其方式</td>
</tr>
<tr>
<td>border</td>
<td>1或””</td>
<td>规定表格单元是否拥有边框，默认为””，表示没有边框</td>
</tr>
<tr>
<td>cellpadding</td>
<td>像素值</td>
<td>规定单元边沿与其内容之间的空白，默认1像素</td>
</tr>
<tr>
<td>cellspacing</td>
<td>像素值</td>
<td>规定单元格之间的空白，默认2像素</td>
</tr>
<tr>
<td>width</td>
<td>像素值或百分比</td>
<td>规定表格的宽度</td>
</tr>
</tbody></table>
<h3 id="表格结构标签"><a href="#表格结构标签" class="headerlink" title="表格结构标签"></a>表格结构标签</h3><p>使用场景：因为表格可能很长，为了更好地表示表格的语义，可以将表格分隔称表格头部和表格主体两个部分。在表格标签中，分别用<code>&lt;thead&gt;</code>标签、<code>&lt;tbody&gt;</code>标签表示表格的头部和主体，这样可以更好地分清表格的结构。</p>
<h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h3><p>特殊情况下，可以将多个单元格合并成一个单元格，先学会简单的合并：</p>
<ul>
<li>合并单元格方式</li>
<li>目标单元格</li>
<li>合并单元格的步骤</li>
</ul>
<h3 id="合并单元格方式"><a href="#合并单元格方式" class="headerlink" title="合并单元格方式"></a>合并单元格方式</h3><ul>
<li>跨行合并：rowspan &#x3D; “合并单元格的个数”</li>
<li>跨列合并：colspan &#x3D; “合并单元格的个数”</li>
</ul>
<h3 id="目标单元格（写合并代码）"><a href="#目标单元格（写合并代码）" class="headerlink" title="目标单元格（写合并代码）"></a>目标单元格（写合并代码）</h3><ul>
<li>跨行：最上侧单元格为目标单元格，写合并代码</li>
<li>跨列：最坐侧单元格为目标单元格，写合并代码</li>
</ul>
<h3 id="合并单元格三部曲"><a href="#合并单元格三部曲" class="headerlink" title="合并单元格三部曲"></a>合并单元格三部曲</h3><ol>
<li>先确定是跨行还是跨列合并。</li>
<li>找到目标单元格，写上合并方式 &#x3D; 合并的单元格数量。比如<code>&lt;td colspan=&quot;2&quot;&gt;&lt;/td&gt;</code>。</li>
<li>删除多余的单元格。</li>
</ol>
<h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><p>表格是用来显示数据的，列表是用来布局的。</p>
<p>列表最大的特点就是整齐、整洁、有序，它作为布局会更加自由和方便。</p>
<p>根据使用情景不同，列表可以分为三大类：无序列表、有序列表和自定义列表。</p>
<h3 id="无序列表（重点）"><a href="#无序列表（重点）" class="headerlink" title="无序列表（重点）"></a>无序列表（重点）</h3><p><code>&lt;ul&gt;</code>标签表示HTML页面中项目的无序列表，一般会以项目符号呈现列表项，而列表项使用<code>&lt;li&gt;</code>标签定义，无序列表的基本语法格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">	&lt;li&gt;列表项1&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;列表项2&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;列表项3&lt;/li&gt;</span><br><span class="line">	...</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>

<ol>
<li>无序列表的各个列表项之间没有顺序级别之分，是并列的。</li>
<li><code>&lt;ul&gt;&lt;/ul&gt;</code>中只能嵌套<code>&lt;li&gt;&lt;/li&gt;</code>，直接在<code>&lt;ul&gt;&lt;/ul&gt;</code>标签中输入其他标签或者文字的做法是不被允许的。</li>
<li><code>&lt;li&gt;</code>与<code>&lt;/li&gt;</code>之间相当于一个容器，可以容纳所有元素。</li>
<li>无序列表会带有自己的样式属性，但在实际使用时，我们会使用css来设置。</li>
</ol>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>有序列表即为有排列顺序的列表，其各个列表项会按照一定的顺序排列定义。</p>
<p>在HTML标签中，<code>&lt;ol&gt;</code>标签用于定义有序列表，列表排序以数字来显示，并且使用<code>&lt;li&gt;</code>标签来定义列表项。基本语法格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">	&lt;li&gt;列表项1&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;列表项2&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;列表项3&lt;/li&gt;</span><br><span class="line">	...</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure>

<ol>
<li><code>&lt;ol&gt;&lt;/ol&gt;</code>中只能嵌套<code>&lt;li&gt;&lt;/li&gt;</code>，直接在<code>&lt;ol&gt;&lt;/ol&gt;</code>标签中输入其他标签或者文字的做法是不被允许的。</li>
<li><code>&lt;li&gt;</code>与<code>&lt;/li&gt;</code>之间相当于一个容器，可以容纳所有元素。</li>
<li>有序列表会带有自己的样式属性，但在实际使用时，我们会有css来设置。</li>
</ol>
<h3 id="自定义列表（重点）"><a href="#自定义列表（重点）" class="headerlink" title="自定义列表（重点）"></a>自定义列表（重点）</h3><p>自定义列表的使用场景：自定义列表常用于对对术语或名词进行解释或描述，自定义列表的列表项前没有任何项目符号。</p>
<p>在HTML标签中，<code>&lt;dl&gt;</code>标签用于定义描述列表（或定义列表），该标签会与<code>&lt;dt&gt;</code>（定义项目&#x2F;名字）和<code>&lt;dd&gt;</code>（描述每一个项目&#x2F;名字）一起使用。基本语法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">	&lt;dt&gt;名词1&lt;/dt&gt;</span><br><span class="line">	&lt;dd&gt;名词1解释1&lt;/dt&gt;</span><br><span class="line">	&lt;dd&gt;名词1解释2&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>

<ol>
<li><code>&lt;dl&gt;&lt;/dl&gt;</code>里面只能包含<code>&lt;dt&gt;</code>和<code>&lt;dd&gt;</code>。</li>
<li><code>&lt;dt&gt;</code>和<code>&lt;dd&gt;</code>没有个数限制，经常是一个<code>&lt;dt&gt;</code>对应多个<code>&lt;dd&gt;</code>。</li>
</ol>
<h3 id="列表总结"><a href="#列表总结" class="headerlink" title="列表总结"></a>列表总结</h3><table>
<thead>
<tr>
<th><strong>标签名</strong></th>
<th><strong>定义</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>&lt;ul&gt;&lt;&#x2F;ul&gt;</td>
<td>无序列表</td>
<td>里面只能包含&lt;li&gt;，没有顺序，使用较多，&lt;li&gt;里面可以包含任何标签</td>
</tr>
<tr>
<td>&lt;ol&gt;&lt;&#x2F;ol&gt;</td>
<td>有序列表</td>
<td>里面只能包含&lt;li&gt;，有顺序，使用较少，&lt;li&gt;里面可以包含任何标签</td>
</tr>
<tr>
<td>&lt;dl&gt;&lt;&#x2F;dl&gt;</td>
<td>自定义列表</td>
<td>里面只能包含&lt;dt&gt;和&lt;dd&gt;，&lt;dt&gt;和&lt;dd&gt;里面可以方任何标签</td>
</tr>
</tbody></table>
<h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><h3 id="为什么需要表单"><a href="#为什么需要表单" class="headerlink" title="为什么需要表单"></a>为什么需要表单</h3><p>使用表单的目的是为了收集用户信息，在网页中，我们也需要和用户进行交互，收集用户资料，此时就需要表单。</p>
<h3 id="表单的组成"><a href="#表单的组成" class="headerlink" title="表单的组成"></a>表单的组成</h3><p>在HTML中，一个完整的表单通常由表单域、表单控件（也称为表单元素）和提示信息3个部分组成。</p>
<h4 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h4><p>表单域是一个包含表单元素的区域，在HTML标签中，<code>&lt;form&gt;</code>标签用于定义表单域以实现用户信息的收集和传递。<code>&lt;form&gt;</code>会把它范围内的表单元素信息提交给服务器。基本语法格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;form action=&quot;url地址&quot; method=&quot;提交方式&quot; name=&quot;表单域名称&quot;&gt;</span><br><span class="line">	各种表单元素控件</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>

<p>常用属性：</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th><strong>属性值</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>action</td>
<td>url地址</td>
<td>用于指定接收并处理表单数据的服务器程序的url地址</td>
</tr>
<tr>
<td>method</td>
<td>get&#x2F;post</td>
<td>用于设置表单数据的提交方式，其取值为get或post</td>
</tr>
<tr>
<td>name</td>
<td>名称</td>
<td>用于指定表单的名称，以区分同一个页面中的多个表单域</td>
</tr>
</tbody></table>
<h4 id="表单控件（表单元素）"><a href="#表单控件（表单元素）" class="headerlink" title="表单控件（表单元素）"></a>表单控件（表单元素）</h4><p>在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或选择的内容控件。</p>
<ul>
<li>input输入表单元素</li>
<li>select下拉表单元素</li>
<li>textarea文本域元素</li>
</ul>
<h5 id="input表单元素"><a href="#input表单元素" class="headerlink" title="input表单元素"></a>input表单元素</h5><p>在英文单词中input是输入的意思，而在表单元素中，<code>&lt;input&gt;</code>标签用于收集用户信息。在<code>&lt;input&gt;</code>标签中，包含一个<code>type</code>属性，根据不同得<code>type</code>属性值，输入字段拥有很多种形式（可以是文本字段、复选框、掩码后的文本控件、单选按钮等）。基本语法格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input type=&quot;属性值&quot; /&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>&lt;input/&gt;</code>标签为单标签</li>
<li><code>type</code>属性设置不同的属性值用来指定不同的控件类型</li>
</ul>
<p><code>type</code>属性的属性值及其描述如下：</p>
<table>
<thead>
<tr>
<th><strong>属性值</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>button</td>
<td>定义可点击按钮（多数情况下，用于通过JavaScript启动脚本）</td>
</tr>
<tr>
<td>checkbox</td>
<td>定义复选框</td>
</tr>
<tr>
<td>file</td>
<td>定义输入字段和“浏览”按钮，供文件上传</td>
</tr>
<tr>
<td>hidden</td>
<td>定义隐藏的输入字段</td>
</tr>
<tr>
<td>image</td>
<td>定义图像形式的提交按钮</td>
</tr>
<tr>
<td>password</td>
<td>定义密码字段，该字段中的字符被掩码</td>
</tr>
<tr>
<td>radio</td>
<td>定义单选按钮，要实现单选按钮间的互斥，需要设定相同的name属性</td>
</tr>
<tr>
<td>reset</td>
<td>定义重置按钮，重置按钮会清除表单中的所有数据</td>
</tr>
<tr>
<td>submit</td>
<td>定义提交按钮，提交按钮会把表单中的数据提交到服务器</td>
</tr>
<tr>
<td>text</td>
<td>定义单行的输入字段，用户可在其中输入文本，默认宽度为20个字符</td>
</tr>
</tbody></table>
<p>除<code>type</code>属性外，<code>&lt;input&gt;</code>标签还有其他很多属性，其常用属性如下：</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th><strong>属性值</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>name</td>
<td>由用户自定义</td>
<td>定义input元素的名称</td>
</tr>
<tr>
<td>value</td>
<td>由用户自定义</td>
<td>规定input元素的值</td>
</tr>
<tr>
<td>checked</td>
<td>checked</td>
<td>规定此input元素首次加载时应当被选中</td>
</tr>
<tr>
<td>maxlength</td>
<td>正整数</td>
<td>规定输入字段中的字符的最大长度</td>
</tr>
</tbody></table>
<ol>
<li>name和value时每个表单元素都有的属性值，主要给后台人员使用。</li>
<li>name是表单元素的名字，要求单选按钮和复选框要有相同的name值。</li>
<li>checked属性主要针对于单选按钮和复选框，主要作用是一打开页面，就可以默认选中某个表单元素。</li>
<li>maxlength是用户可以在表单元素中输入的最大字符数，一般较少使用。</li>
</ol>
<h5 id="select下拉表单元素"><a href="#select下拉表单元素" class="headerlink" title="select下拉表单元素"></a>select下拉表单元素</h5><p>使用场景：在页面中，如果有多个选项让用户选择，并且想要节约页面空间时，我们可以使用<code>&lt;select&gt;</code>标签控件定义下拉列表。基本语法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;select&gt;</span><br><span class="line">	&lt;option&gt;选项1&lt;/option&gt;</span><br><span class="line">	&lt;option&gt;选项2&lt;/option&gt;</span><br><span class="line">	&lt;option&gt;选项3&lt;/option&gt;</span><br><span class="line">	...</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>

<ol>
<li><code>&lt;select&gt;</code>中至少包含一对<code>&lt;option&gt;</code>。</li>
<li>在<code>&lt;option&gt;</code>中定义selected&#x3D;”selected”时，当前项即为默认选中项。</li>
</ol>
<h5 id="textarea文本域表单元素"><a href="#textarea文本域表单元素" class="headerlink" title="textarea文本域表单元素"></a>textarea文本域表单元素</h5><p>使用场景：当用户输入内容较多的情况下，我们就不能使用文本框了，此时我们就可以用<code>&lt;textarea&gt;</code>标签。在表单元素中，<code>&lt;textarea&gt;</code>标签时用于定义多行文本输入的控件。使用多行文本输入控件，可以输入更多的文字，该控件常见于留言板和评论。基本语法格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;textarea rows=&quot;3&quot; cols=&quot;20&quot;</span><br><span class="line">	文本内容</span><br><span class="line">&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>

<ol>
<li>通过<code>&lt;textarea&gt;</code>标签可以轻松的创建多行文本输入框。</li>
<li>cols&#x3D;”每行中的字符数”，rows&#x3D;”显示的行数”，但在实际开发中不会使用，都是用CSS来改变大小。</li>
</ol>
<h2 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h2><p><code>&lt;label&gt;</code>标签为input元素定义标注（标签）。</p>
<p><code>&lt;label&gt;</code>标签用于绑定一个表单元素，当点击<code>&lt;label&gt;</code>标签内的文本时，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上，用来增加用户体验。基本语法格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;label for=&quot;sex&quot; &gt;男&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;sex&quot; /&gt;</span><br></pre></td></tr></table></figure>

<p>核心：<code>&lt;label&gt;</code>标签的<code>for</code>属性应当与相关元素的<code>id</code>属性相同。</p>
]]></content>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
</search>
